---
- name: Upgrade Firmware
  hosts: all
  connection: network_cli
  gather_facts: no

  vars:
     compliant_ios_version: ''
     new_ios_bin: ''
     new_ios_md5: ''
     should_reboot: ''
     ansible_connection: ''
     ansible_network_os: ''
     tftp_server: ''
     sever_type: ''

  tasks:
    - name: Get facts of IOS devices
      ios_facts:

    - name: Upgrade IOS image if not compliant on devices
      block:
      - name: COPY OVER IOS {{ new_ios_bin }}
        ios_command:
           commands:
              - command: "copy {{server_type}}://{{tftp_server}}/{{ new_ios_bin }} bootflash:"
                prompt: '[{{ new_ios_bin }}]'
                answer: "\r"
        vars:
          ansible_command_timeout: 1800
        tags:
          - noxfer

      - name: CHECK MD5 HASH against {{new_ios_md5}} Skip rest if fail
        ios_command:
           commands:
              - command: "verify /md5 bootflash:{{ new_ios_bin }}"
        register: md5_result
        vars:
          ansible_command_timeout: 300

      - name: Upgrade if MD5 Hash Matches
        block:
        - name: SETTING BOOT IMAGE to {{ new_ios_bin }}
          ios_config:
            lines:
            - no boot system
            - boot system flash bootflash:{{ new_ios_bin }}
            match: none
            save_when: always

        - name: REBOOT SWITCH IF INSTRUCTED
          block:
          - name: Rebooting Devices
            ios_command:
               commands:
                  - command: "reload"
                    prompt: '[confirm]'
                    answer: "\r"
            vars:
              ansible_command_timeout: 60

          - name: Waiting for Device to return
            wait_for:
              host: "{{inventory_hostname}}"
              port: 22
              delay: 120
              timeout: 900
            delegate_to: localhost

          - name: Getting updated facts of device
            ios_facts:

          - name: ASSERT THAT THE IOS VERSION IS {{compliant_ios_version}}
            assert:
              that:
                - compliant_ios_version == ansible_net_version
              msg: "IOS version does not match compliant version. Upgrade unsuccessful."

          when: should_reboot == "YES"

        when: new_ios_md5 in md5_result.stdout[0]

      when: ansible_net_version != compliant_ios_version
...
