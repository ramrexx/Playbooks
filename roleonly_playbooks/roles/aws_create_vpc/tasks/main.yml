---
- name: 'Preflight Varible check :: aws_access_key'
  fail: msg='Please include the aws_access_key to the variable "aws_access_key"'
  run_once: true
  when: 'aws_access_key is not defined'
- name: 'Preflight Varible check :: aws_secret_key'
  fail: msg='Please include the aws_secret_key to the variable "aws_secret_key"'
  run_once: true
  when: 'aws_secret_key is not defined'
- name: 'Preflight Varible check :: cloud_name'
  fail: msg='Please include the cloud_name to the variable "cloud_name"'
  run_once: true
  when: 'cloud_name is not defined'
- name: 'Preflight Varible check :: cidr'
  fail: msg='Please include the cidr to the variable "cidr"'
  run_once: true
  when: 'cidr is not defined'
- name: 'Preflight Varible check :: region'
  fail: msg='Please include the aws_access_key to the variable "region"'
  run_once: true
  when: 'region is not defined'
- name: 'Preflight Varible check :: user_name'
  fail: msg='Please include the user_name to the variable "user_name"'
  run_once: true
  when: 'user_name is not defined'
- name: 'Preflight Varible check :: alwaysup'
  fail: msg='Please include the aws_access_key to the variable "alwaysup"'
  run_once: true
  when: 'alwaysup is not defined'
- name: 'Preflight Varible check :: deleteby'
  fail: msg='Please include the user_name to the variable "deleteby"'
  run_once: true
  when: 'deleteby is not defined'




- name: Create VPC {{ cloud_name }}_{{user_name}} in {{ region }}
  ec2_vpc_net:
    name: "{{ cloud_name }}_{{user_name}}"
    cidr_block: "{{ cidr }}"
    region: "{{ region }}"
    state: present

    tags:
      AlwaysUp: "{{ alwaysup }}"
      Name: "{{ user_name }}"
      ansible_group: "{{ ansible_group }}"
      Createdby: Ansible Tower
      Contact: "{{ my_email_address }}"
      DeletebBy: "{{ deleteby }}"
  register: my_vpc
- name: Display my_vpc.vpc.id info for "{{ cloud_name }}_{{ user_name}}"
  debug:
    var: my_vpc.vpc.id

- name: create security group {{ security_group_name }}
  ec2_group:
    name: "{{ security_group_name }}"
    description: Security group with rule descriptions created by Ansible
    vpc_id: "{{ my_vpc.vpc.id }}"
    region: "{{ region }}"
    tags:
      AlwaysUp: "{{ alwaysup }}"
      Name: "{{ user_name }}"
      ansible_group: "{{ ansible_group }}"
      Createdby: Ansible Tower
      Contact: "{{ my_email_address }}"
      DeleteBy: "{{ deleteby }}"
    rules:
    - proto: icmp
      from_port: 8 # icmp type, -1 = any type
      to_port:  -1 # icmp subtype, -1 = any subtype
      cidr_ip: 0.0.0.0/0
      rule_desc: allow ping
    - proto: tcp
      ports: 80
      cidr_ip: 0.0.0.0/0
      rule_desc: allow all on port 80
    - proto: tcp
      ports: 22
      cidr_ip: 0.0.0.0/0
      rule_desc: allow all on port 22
  tags:
    - createsecgrp
    - onlyvpc
  register: my_security_group
- name: Create {{ vpc_subnet_name }} subnet
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ my_vpc.vpc.id }}"
    cidr: "{{ cidr }}"
    region: "{{ region }}"
    map_public: yes
    tags:
      AlwaysUp: "{{ alwaysup }}"
      Name: "{{ vpc_subnet_name }}"
      ansible_group: "{{ ansible_group }}"
      Createdby: Ansible Tower
      Contact: "{{ my_email_address }}"
      DeleteBy: "{{ deleteby }}"
  tags:
    - createsubnet
    - onlyvpc
  register: my_vpc_subnet
- name: Create IGW "{{ igw_name }}" for {{ cloud_name }}_{{user_name}}
  ec2_vpc_igw:
    vpc_id: "{{ my_vpc.vpc.id }}"
    region: "{{ region }}"
    state: present
    tags:
      Name: "{{igw_name}}"
      ansible_group: "{{ ansible_group }}"
      Createdby: Ansible Tower
      Contact: "{{my_email_address}}"
      DeletebBy: "{{deleteby}}"
  tags:
    - createigw
    - onlyvpc
  register: my_igw
#- name: Gather default Route Table ID
#  vpc_route_table_info:
#    region: "{{ region }}"
#    filters:
#      vpc-id: "{{ my_vpc.vpc.id }}"
#  register: vpc_default_route

- name: Create Internet route Table "{{ rt_name }}"
  ec2_vpc_route_table:
    vpc_id: "{{ my_vpc.vpc.id }}"
    region: "{{ region }}"
    #route_table_id: "{{ vpc_default_route.route_tables[0].id }}"
    #lookup: id
    tags:
      AlwaysUp: " {{alwaysup}} "
      Name: "{{ rt_name }}"
      ansible_group: "{{ ansible_group }}"
      Createdby: Ansible Tower
      Contact: "{{ my_email_address }}"
      DeleteBy: "{{deleteby}}"
    subnets:
      - "{{ my_vpc_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ my_igw.gateway_id }}"
  tags:
    - creatert
    - onlyvpc
  register: my_route_table
